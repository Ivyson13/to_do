{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ivyson\\\\Desktop\\\\todolist-project\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskItem from './TaskItem';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_API_URL + '/tasks');\n        if (Array.isArray(response.data)) {\n          setTasks(response.data);\n        } else {\n          console.error(\"Response data is not an array:\", response.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const addTask = task => {\n    setTasks(prevTasks => [...prevTasks, task]);\n  };\n  const deleteTask = async id => {\n    await axios.delete(`${process.env.REACT_APP_API_URL}/tasks/${id}`);\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const updateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(tasks) ? tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        deleteTask: deleteTask,\n        updateTask: updateTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskItem","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetchTasks","response","get","process","env","REACT_APP_API_URL","Array","isArray","data","console","error","addTask","task","prevTasks","deleteTask","id","delete","filter","updateTask","updatedTask","map","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ivyson/Desktop/todolist-project/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport TaskItem from './TaskItem';\r\nimport axios from 'axios';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get(process.env.REACT_APP_API_URL + '/tasks');\r\n        if (Array.isArray(response.data)) {\r\n          setTasks(response.data);\r\n        } else {\r\n          console.error(\"Response data is not an array:\", response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const addTask = (task) => {\r\n    setTasks((prevTasks) => [...prevTasks, task]);\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    await axios.delete(`${process.env.REACT_APP_API_URL}/tasks/${id}`);\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(tasks.map(task => (task.id === updatedTask.id ? updatedTask : task)));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TaskForm addTask={addTask} />\r\n      <ul>\r\n        {Array.isArray(tasks) ? tasks.map(task => (\r\n          <TaskItem key={task.id} task={task} deleteTask={deleteTask} updateTask={updateTask} />\r\n        )) : <li>No tasks available</li>}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}