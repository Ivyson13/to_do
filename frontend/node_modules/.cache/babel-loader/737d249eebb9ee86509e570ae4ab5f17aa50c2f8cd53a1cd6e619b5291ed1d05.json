{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ivyson\\\\Desktop\\\\todolist-project\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TaskItem from './TaskItem';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_API_URL + '/tasks');\n        if (Array.isArray(response.data)) {\n          setTasks(response.data);\n        } else {\n          console.error('Response data is not an array:', response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const addTask = task => {\n    setTasks(prevTasks => [...prevTasks, task]);\n  };\n  const updateTask = updatedTask => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n  const deleteTask = taskId => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), Array.isArray(tasks) && tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","axios","TaskItem","TaskForm","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetchTasks","response","get","process","env","REACT_APP_API_URL","Array","isArray","data","console","error","addTask","task","prevTasks","updateTask","updatedTask","map","id","deleteTask","taskId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/Ivyson/Desktop/todolist-project/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport TaskItem from './TaskItem';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get(process.env.REACT_APP_API_URL + '/tasks');\r\n        if (Array.isArray(response.data)) {\r\n          setTasks(response.data);\r\n        } else {\r\n          console.error('Response data is not an array:', response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const addTask = (task) => {\r\n    setTasks((prevTasks) => [...prevTasks, task]);\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks((prevTasks) =>\r\n      prevTasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\r\n    );\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TaskForm addTask={addTask} />\r\n      {Array.isArray(tasks) && tasks.length > 0 ? (\r\n        tasks.map((task) => (\r\n          <TaskItem\r\n            key={task.id}\r\n            task={task}\r\n            updateTask={updateTask}\r\n            deleteTask={deleteTask}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>No tasks available</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,QAAQ,CAAC;QAC1E,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACO,IAAI,CAAC,EAAE;UAChCT,QAAQ,CAACE,QAAQ,CAACO,IAAI,CAAC;QACzB,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAET,QAAQ,CAACO,IAAI,CAAC;QAChE;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDV,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,OAAO,GAAIC,IAAI,IAAK;IACxBb,QAAQ,CAAEc,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,IAAI,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,UAAU,GAAIC,WAAW,IAAK;IAClChB,QAAQ,CAAEc,SAAS,IACjBA,SAAS,CAACG,GAAG,CAAEJ,IAAI,IAAMA,IAAI,CAACK,EAAE,KAAKF,WAAW,CAACE,EAAE,GAAGF,WAAW,GAAGH,IAAK,CAC3E,CAAC;EACH,CAAC;EAED,MAAMM,UAAU,GAAIC,MAAM,IAAK;IAC7BpB,QAAQ,CAAEc,SAAS,IAAKA,SAAS,CAACO,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKE,MAAM,CAAC,CAAC;EACzE,CAAC;EAED,oBACExB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA,CAACF,QAAQ;MAACkB,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7BnB,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC,IAAIA,KAAK,CAAC4B,MAAM,GAAG,CAAC,GACvC5B,KAAK,CAACkB,GAAG,CAAEJ,IAAI,iBACbjB,OAAA,CAACH,QAAQ;MAEPoB,IAAI,EAAEA,IAAK;MACXE,UAAU,EAAEA,UAAW;MACvBI,UAAU,EAAEA;IAAW,GAHlBN,IAAI,CAACK,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF,CAAC,gBAEF9B,OAAA;MAAA0B,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlDID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}