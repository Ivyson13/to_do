{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import TaskItem from'./TaskItem';import TaskForm from'./TaskForm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskList=()=>{const[tasks,setTasks]=useState([]);useEffect(()=>{const fetchTasks=async()=>{const response=await axios.get(process.env.REACT_APP_API_URL+'/tasks');setTasks(response.data);};fetchTasks();},[]);const addTask=task=>{setTasks([...tasks,task]);};const updateTask=updatedTask=>{setTasks(tasks.map(task=>task.id===updatedTask.id?updatedTask:task));};const deleteTask=taskId=>{setTasks(tasks.filter(task=>task.id!==taskId));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TaskForm,{addTask:addTask}),tasks.map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task,updateTask:updateTask,deleteTask:deleteTask},task.id))]});};export default TaskList;","map":{"version":3,"names":["React","useEffect","useState","axios","TaskItem","TaskForm","jsx","_jsx","jsxs","_jsxs","TaskList","tasks","setTasks","fetchTasks","response","get","process","env","REACT_APP_API_URL","data","addTask","task","updateTask","updatedTask","map","id","deleteTask","taskId","filter","children"],"sources":["C:/Users/Ivyson/Desktop/todolist-project/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport TaskItem from './TaskItem';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const response = await axios.get(process.env.REACT_APP_API_URL + '/tasks');\r\n      setTasks(response.data);\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const addTask = (task) => {\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task)));\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks(tasks.filter((task) => task.id !== taskId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TaskForm addTask={addTask} />\r\n      {tasks.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          task={task}\r\n          updateTask={updateTask}\r\n          deleteTask={deleteTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAG,QAAQ,CAAC,CAC1EN,QAAQ,CAACE,QAAQ,CAACK,IAAI,CAAC,CACzB,CAAC,CACDN,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAO,OAAO,CAAIC,IAAI,EAAK,CACxBT,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEU,IAAI,CAAC,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,UAAU,CAAIC,WAAW,EAAK,CAClCX,QAAQ,CAACD,KAAK,CAACa,GAAG,CAAEH,IAAI,EAAMA,IAAI,CAACI,EAAE,GAAKF,WAAW,CAACE,EAAE,CAAGF,WAAW,CAAGF,IAAK,CAAC,CAAC,CAClF,CAAC,CAED,KAAM,CAAAK,UAAU,CAAIC,MAAM,EAAK,CAC7Bf,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAAEP,IAAI,EAAKA,IAAI,CAACI,EAAE,GAAKE,MAAM,CAAC,CAAC,CACtD,CAAC,CAED,mBACElB,KAAA,QAAAoB,QAAA,eACEtB,IAAA,CAACF,QAAQ,EAACe,OAAO,CAAEA,OAAQ,CAAE,CAAC,CAC7BT,KAAK,CAACa,GAAG,CAAEH,IAAI,eACdd,IAAA,CAACH,QAAQ,EAEPiB,IAAI,CAAEA,IAAK,CACXC,UAAU,CAAEA,UAAW,CACvBI,UAAU,CAAEA,UAAW,EAHlBL,IAAI,CAACI,EAIX,CACF,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}