{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ivyson\\\\Desktop\\\\todolist-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch(`${API_URL}/tasks`).then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n  const addTask = task => {\n    fetch(`${API_URL}/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(newTask => setTasks([...tasks, newTask])).catch(error => console.error('Error adding task:', error));\n  };\n  const updateTask = updatedTask => {\n    fetch(`${API_URL}/tasks/${updatedTask.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    }).then(response => response.json()).then(() => {\n      setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n    }).catch(error => console.error('Error updating task:', error));\n  };\n  const deleteTask = id => {\n    fetch(`${API_URL}/tasks/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setTasks(tasks.filter(task => task.id !== id));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSave: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","TaskForm","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","App","_s","tasks","setTasks","fetch","then","response","json","data","catch","error","console","addTask","task","method","headers","body","JSON","stringify","newTask","updateTask","updatedTask","id","map","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","_c","$RefreshReg$"],"sources":["C:/Users/Ivyson/Desktop/todolist-project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport './App.css';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetch(`${API_URL}/tasks`)\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n\n  const addTask = (task) => {\n    fetch(`${API_URL}/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    .then(response => response.json())\n    .then(newTask => setTasks([...tasks, newTask]))\n    .catch(error => console.error('Error adding task:', error));\n  };\n\n  const updateTask = (updatedTask) => {\n    fetch(`${API_URL}/tasks/${updatedTask.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    })\n    .then(response => response.json())\n    .then(() => {\n      setTasks(tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task)));\n    })\n    .catch(error => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (id) => {\n    fetch(`${API_URL}/tasks/${id}`, {\n      method: 'DELETE'\n    })\n    .then(() => {\n      setTasks(tasks.filter((task) => task.id !== id));\n    })\n    .catch(error => console.error('Error deleting task:', error));\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Todo List</h1>\n      <TaskForm onSave={addTask} />\n      <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}